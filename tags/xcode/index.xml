<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xcode on Catatsu Tech Blog</title>
    <link>https://catatsu.github.io/tags/xcode/</link>
    <description>Recent content in Xcode on Catatsu Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Code released under the Apache 2.0 license.</copyright>
    <lastBuildDate>Thu, 29 Sep 2016 20:55:14 +0900</lastBuildDate>
    <atom:link href="https://catatsu.github.io/tags/xcode/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>LAMPエンジニアがSwiftを始めた時に必ずぶち当たるであろう壁について簡単に説明する</title>
      <link>https://catatsu.github.io/2016/09/29/hello-swift</link>
      <pubDate>Thu, 29 Sep 2016 20:55:14 +0900</pubDate>
      
      <guid>https://catatsu.github.io/2016/09/29/hello-swift</guid>
      <description>

&lt;p&gt;どうも僕(&lt;a href=&#34;https://github.com/nabeen&#34;&gt;@nabeen&lt;/a&gt;)です。&lt;/p&gt;

&lt;p&gt;ペーペーエンジニアの僕ですが、今までは基本的にPHPでお仕事してきました。でもとあるプロジェクトでいきなりSwiftで書かれたプロダクトを引き継ぐことに、、、！今日はそんな僕が最初に躓いた（今でも躓いている）ことについてお話させていただきます。&lt;/p&gt;

&lt;h2 id=&#34;大前提&#34;&gt;大前提&lt;/h2&gt;

&lt;p&gt;チュートリアルから始めて新規開発とかだとまた違うんでしょうけど、「既存のプロダクト」を「SwiftのSも知らないLAMPエンジニア」が引き継いだ、というちょっと変わった状況であることを念頭に置いておいてください。&lt;/p&gt;

&lt;p&gt;ちなみに、Objective-Cも書いたことはありません。&lt;/p&gt;

&lt;h2 id=&#34;viewの作り方がわからんよ&#34;&gt;Viewの作り方がわからんよ&lt;/h2&gt;

&lt;p&gt;現時点の結論：Storyboardで全体の画面遷移を定義して、細かい部品をxibで作る&lt;/p&gt;

&lt;p&gt;我々LAMPエンジニアは、Viewと言えばHTMLです。CSSです。JSです。&lt;strong&gt;でもSwift（というかネイティブ）は違うんだってね！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;基本的にはGUIで作り込んでいくことになります。GUIでなんとかコンポーネントをドラッグ&amp;amp;ドロップして、GUIでサイズ指定して、GUIで位置指定して、GUIでごにょごにょ。この辺はコード的にはXMLで定義されてるんですけど、なんだか「見えない部分でやってる感」がすごい。&lt;/p&gt;

&lt;p&gt;なんか昔Dreamweaverのビジュアルエディタで位置調整してた時を少し思い出したよ。&lt;/p&gt;

&lt;h2 id=&#34;view作ってたらconstraintsがーーって怒られるよ&#34;&gt;View作ってたらConstraintsがーーって怒られるよ&lt;/h2&gt;

&lt;p&gt;現時点の結論：きちんと制約をつけましょう&lt;/p&gt;

&lt;p&gt;Xcodeは結構頭がいいので、「なんかこれどこに配置するのかあやふやじゃね？」って時に、ちゃんと僕を怒ってくれます。赤で怒られるから、結構強めに怒ってるのかな。&lt;/p&gt;

&lt;p&gt;でも悪いのはConstraintsをきちんと設定していない僕なので、今ではむしろ感謝しています！Xcodeありがとう！&lt;/p&gt;

&lt;h2 id=&#34;xib表示しただけでなんかdiff出るんだけど&#34;&gt;xib表示しただけでなんかdiff出るんだけど？&lt;/h2&gt;

&lt;p&gt;現時点の結論：自分が「意図的に変更した」部分以外はrevertする&lt;/p&gt;

&lt;p&gt;なんかXMLにOXのシステムバージョンを持っていて、更新されてるとdiffが出てしまう。これはマジでうざい。システム情報なんて持たないで欲しい。ファック！ファック！！ファック！！！&lt;/p&gt;

&lt;p&gt;社内のメンターに聞いたところ、「そういうもん」らしい。まじかよ。マゾかよ。&lt;/p&gt;

&lt;h2 id=&#34;とか-とかあるけど-あれなんなん&#34;&gt;?とか!とかあるけど、あれなんなん?&lt;/h2&gt;

&lt;p&gt;現時点の結論：とりあえず&lt;a href=&#34;http://qiita.com/maiki055/items/b24378a3707bd35a31a8&#34;&gt;ここ&lt;/a&gt;読んどけばいい&lt;/p&gt;

&lt;p&gt;オプショナル型っていうらしい。いわゆるヌルポ（この前覚えた言葉）を防いでくれるために使われるやつで、世界各国のSwiftエンジニアが便利便利と阿吽絶叫しているようだけど、他の言語にはない概念なので( ﾟдﾟ)ﾎﾟｶｰﾝとしていた。&lt;/p&gt;

&lt;p&gt;でも上記の記事を読んでおけば、( ﾟдﾟ)ﾎﾟｶｰﾝから(&lt;em&gt;´﹃｀&lt;/em&gt;)ﾀﾞﾗｰくらいにはなると思う。&lt;/p&gt;

&lt;h2 id=&#34;delegateってなんだよファックかよ&#34;&gt;delegateってなんだよファックかよ&lt;/h2&gt;

&lt;p&gt;現時点の結論：自分で使える気がしない&lt;/p&gt;

&lt;p&gt;delegateはprotcolとセットで出てきて、「何かの処理を依頼する」時に使われるもの、らしい。という概念自体は&lt;a href=&#34;http://qiita.com/mochizukikotaro/items/a5bc60d92aa2d6fe52ca&#34;&gt;このへん&lt;/a&gt;とか読めばわかるんだけど、なんか現実的なユースケースがよくわからない。&lt;/p&gt;

&lt;p&gt;ごめん。&lt;/p&gt;

&lt;h2 id=&#34;viewのviewdidloadとかっていつ呼ばれんの&#34;&gt;ViewのviewDidloadとかっていつ呼ばれんの？&lt;/h2&gt;

&lt;p&gt;現時点の結論：ライフサイクルはわかったけどいつ何の処理を書けばいいのやら&lt;/p&gt;

&lt;p&gt;例えば僕がやっているプロジェクトだと、ViewControllerでこういうのが結構呼ばれている。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;override func viewDidLoad() {
    super.viewDidLoad()
	
	//ごにょごにょ
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記から察するに、「親クラスのアクションを上書きしてるんだな」「親クラスのアクションも呼び出すんだな」ってことはわかるんだけど、じゃあこれいつ呼ばれんの、と。調べてみると&lt;a href=&#34;http://qiita.com/mo_to_44/items/0ca628b4cc74c8c5599d&#34;&gt;ライフサイクル&lt;/a&gt;がちゃんとあって、呼び出し順があるようだ（当然か）。jQueryの&lt;code&gt;$(document).ready&lt;/code&gt;みたいなもんね。&lt;/p&gt;

&lt;p&gt;でもこのライフサイクルがあるのはいいけど、どこになんの処理を書くのがベストプラクティスなんですか？&lt;/p&gt;

&lt;h2 id=&#34;デフォルトで組み込まれているクラス群-関数群がわからない&#34;&gt;デフォルトで組み込まれているクラス群、関数群がわからない&lt;/h2&gt;

&lt;p&gt;現時点の結論：覚えるしか無い&lt;/p&gt;

&lt;p&gt;Javaもそうなんだけど、「やたらと長い名前の標準関数」みたいなのが、Swiftにもあります。んで、そもそもどんなクラス、関数があるのかってのは、もう覚えるしかない。覚える以外の方法があったら教えて欲しい。&lt;/p&gt;

&lt;h2 id=&#34;observerにobservable&#34;&gt;ObserverにObservable&lt;/h2&gt;

&lt;p&gt;現時点の結論：僕にはまだ早かった&lt;/p&gt;

&lt;p&gt;いわゆるReactiveプログラミングの概念。監視対象を決めて、それが変わったらあれもこれもそれも自動で変えてねっていうような感じの仕組み？かな？&lt;/p&gt;

&lt;p&gt;わかってる人風に言うと、&lt;strong&gt;Reactiveを使えば簡単に状態管理を制御できます。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Swiftうんぬんというよりも、Reactiveプログラミングに触れたことがない僕はまだまだ理解に及んでいません。&lt;/p&gt;

&lt;p&gt;ううっ。&lt;/p&gt;

&lt;h2 id=&#34;おまけ-感想&#34;&gt;おまけ：感想&lt;/h2&gt;

&lt;p&gt;基本的にはViewを作るだけなのに、なんでこんなに知らない技術が出てくるんだ！&lt;/p&gt;

&lt;p&gt;プロダクトの特性上、ネイティブでロジックをガリガリ書くってことはなく、APIのレスポンスで何をどう表示するかってのがメインになります。要はViewをいい感じにするだけ、処理はAPI。でもでもでもでもなんだか難しい！&lt;/p&gt;

&lt;p&gt;そもそもコンパイラ型言語っぽい書き方にまだ慣れてない。&lt;/p&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;とりあえず今日からiOSエンジニアって名乗っておきますね(&lt;em&gt;´﹃｀&lt;/em&gt;)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>